{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print to the f**k console": {
		"prefix": "my-log",
		"body": [
			"console.log('fuck',$1);",
		],
		"description": "Log output to console"
	},
	"Tap to f**k console": {
		"prefix": "my-tap",
		"body": [
			"tap((t: any)=>console.log('fuck', t)),",
		],
		"description": "Log output to console"
	},
	"Add subscribe() to test" : {
		"prefix": "my-sub",
		"body": [
			".subscribe();"
		],
		"description": "Add subscribe to trigger data"
	},
	"Add test boilerplate" : {
		"prefix": "my-test",
		"body": [
			"it('should find a element in the component', () => {
				expect(component).toBeTruthy();
			});"
		],
		"description": "Add starter test"
	},
	"Add spyOn to current test" : {
		"prefix": "my-spyon",
		"body": [
			"jest.spyOn(component, '$1').mockImplementationOnce(() => { return true; });"
		],
		"description": "Add starter spyOn to test"
	}
}
